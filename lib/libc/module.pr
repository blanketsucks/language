const SEEK_END = 2;
const SEEK_SET = 0;
    
extern "C" {
    func fopen(path: i8*, mode: i8*) -> i32*;
    func fdopen(fd: i32, mode: i8*) -> i32*;
    func freopen(path: i8*, mode: i8*, stream: i32*) -> i32*;
    func fclose(stream: i32*) -> i32;
    func fflush(stream: i32*) -> i32;

    func fgetc(stream: i32*) -> i32;
    func fgets(buf: i8*, n: i32, stream: i32*) -> i8*;
    func getc(stream: i32*) -> i32;
    func getchar() -> i32;
    func ungetc(c: i32, stream: i32*) -> i32;

    func fputc(c: i32, stream: i32*) -> i32;
    func fputs(s: i8*, stream: i32*) -> i32;
    func putc(c: i32, stream: i32*) -> i32;
    [[allow_dead_code]] func putchar(c: i32) -> i32;
    [[allow_dead_code]] func puts(s: i8*) -> i32;

    func fread(buf: i8*, size: i32, n: i32, stream: i32*) -> i32;
    func fwrite(buf: i8*, size: i32, n: i32, stream: i32*) -> i32;

    func fseek(stream: i32*, offset: i32, whence: i32) -> i32;
    func ftell(stream: i32*) -> i32;
    func rewind(stream: i32*);
    func fgetpos(stream: i32*, pos: i32*) -> i32;
    func fsetpos(stream: i32*, pos: i32*) -> i32;

    func clearerr(stream: i32*);
    func feof(stream: i32*) -> i32;
    func ferror(stream: i32*) -> i32;
    func fileno(stream: i32*) -> i32;

    func printf(fmt: i8*, ...) -> i32;
    func fprintf(stream: i32*, fmt: i8*, ...) -> i32;
    func dprintf(fd: i32, fmt: i8*, ...) -> i32;
    func sprintf(buf: i8*, fmt: i8*, ...) -> i32;
    func snprintf(buf: i8*, n: i32, fmt: i8*, ...) -> i32;

    func malloc(size: i32) -> void*;
    func calloc(nmemb: i32, size: i32) -> void*;
    func realloc(ptr: void*, size: i32) -> void*;
    func reallocarray(ptr: void*, nmemb: i32, size: i32) -> void*;
    func free(ptr: void*);

    func memcpy(dest: void*, src: void*, size: i32) -> void*;
    func memset(dest: void*, c: i32, size: i32) -> void*;
    func memmove(dest: void*, src: void*, size: i32) -> void*;
    func memcmp(s1: void*, s2: void*, size: i32) -> i32;
    func memchr(s: void*, c: i32, size: i32) -> void*;
    func memrchr(s: void*, c: i32, size: i32) -> void*;
    func memmem(s: void*, n: i32, needle: void*, m: i32) -> void*;

    func strlen(s: i8*) -> i32;
    func strcmp(s1: i8*, s2: i8*) -> i32;
    func strncmp(s1: i8*, s2: i8*, n: i32) -> i32;
    func strcasecmp(s1: i8*, s2: i8*) -> i32;
    func strncasecmp(s1: i8*, s2: i8*, n: i32) -> i32;
    func strchr(s: i8*, c: i32) -> i8*;
    func strrchr(s: i8*, c: i32) -> i8*;
    func strstr(haystack: i8*, needle: i8*) -> i8*;
    func strcasestr(haystack: i8*, needle: i8*) -> i8*;
    func strtok(s: i8*, delim: i8*) -> i8*;
    func strtok_r(s: i8*, delim: i8*, save_ptr: i8**) -> i8*;
    func strdup(s: i8*) -> i8*;
    func strndup(s: i8*, n: i32) -> i8*;
    func strnlen(s: i8*, n: i32) -> i32;
    func strspn(s: i8*, accept: i8*) -> i32;
    func strcspn(s: i8*, reject: i8*) -> i32;
    func strpbrk(s: i8*, accept: i8*) -> i8*;
    func strsep(s: i8*, delim: i8*) -> i8*;
    func strcoll(s1: i8*, s2: i8*) -> i32;

    func isalnum(c: i32) -> i32;
    func isalpha(c: i32) -> i32;
    func isblank(c: i32) -> i32;
    func iscntrl(c: i32) -> i32;
    func isdigit(c: i32) -> i32;
    func isgraph(c: i32) -> i32;
    func islower(c: i32) -> i32;
    func isprint(c: i32) -> i32;
    func ispunct(c: i32) -> i32;
    func isspace(c: i32) -> i32;
    func isupper(c: i32) -> i32;
    func isxdigit(c: i32) -> i32;

    func tolower(c: i32) -> i32;
    func toupper(c: i32) -> i32;
    func toascii(c: i32) -> i32;

    func atoi(s: i8*) -> i32;
    func atol(s: i8*) -> i64;
    func atoll(s: i8*) -> i64;
    func atof(s: i8*) -> f32;

    func sleep(seconds: i32) -> i32;

    [[noreturn]] func exit(code: i32);

    func atexit(f: func() -> void);
    
    func strerror(err: i32) -> i8*;
    func perror(s: i8*);

    func __errno_location() -> i32*;
    func __h_errno_location() -> i32*;
}
