# Definitely not stolen from https://gist.github.com/rexim/c595009436f87ca076e7c4a2fb92ce10 

import libc;

const SIZE = 100;
let state: [i32; SIZE];

func main() -> i32 { 
    state[SIZE - 2] = 1;
    for (i = 0; i < (SIZE - 2); i++) {
        for (j = 0; j < SIZE; j++) {
            libc::putchar(" *"[state[j]]);
        }

        libc::putchar('\n');

        let pattern = (state[0] << 1) | state[1];
        for (j = 1; j < (SIZE - 1); j++) {
            pattern = ((pattern << 1) & 7) | state[j + 1];
            state[j] = (110 >> pattern) & 1;
        }
    }

    return 0;
}