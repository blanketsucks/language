# Definitely not stolen from https://gist.github.com/rexim/c595009436f87ca076e7c4a2fb92ce10 

import libc;

# const SIZE = 100;
# let mut state: [i32; SIZE];

func main() -> i32 { 
    let SIZE = 100;
    let mut state: [i32; 100];

    state[SIZE - 2] = 1;
    for _ in 0..SIZE - 2 {
        for j in 0..SIZE {
            if (state[j]) {
                libc::putchar('*');
            } else {
                libc::putchar(' ');
            }
        }

        libc::putchar('\n');

        let mut pattern = (state[0] << 1) | state[1];
        for j in 0..SIZE - 1 {
            pattern = ((pattern << 1) & 7) | state[j + 1];
            state[j] = (110 >> pattern) & 1;
        }
    }

    return 0;
}